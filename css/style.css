html{
  scroll-behavior: smooth;
}

body{
  background-color: #737373;
  font-size: 18px;
  line-height: 1.15;
  margin: 0;
  padding: 0;
}


.overview{
  background-attachment: fixed; /* Parallax effect */     
  background-position: center;  /* Parallax effect */
  background-repeat: no-repeat; /* Parallax effect */
  background-size: cover;       /* Parallax effect */
  color: white;
  height: 400px;                /* Parallax effect */
}


.overview p{
  color: white;
  font-size: 24px;
  padding: 0 100px;
  text-align: center;
}

h1{
  font-size: 50px;
  line-height: 1;
  padding: 50px 0;
  text-align: center;
}

h2{
  font-size: 32px;
  line-height: 1.5;
}

nav li{
  display:inline;
  padding-right:20px;

}

nav a{
  color: black;
  font-weight: bold;
  text-decoration: none; 
}


.skip a{
  background: white;
  left: 0;
  padding: 6px;
  -webkit-transition: top 1s ease-out;
  transition: top 1s ease-out;
  z-index: 1;
}


nav{
  background-color: #ddd;
  padding: 25px 0; 
  text-align: left;
}

footer{
  background-color: black;
  color: white;
  padding-top: 30px;
  text-align: center;
}


.text-block{
  background-color: rgba(255, 255, 255, .8);
  border: 10px solid black;
  padding: 30px;
}


@media screen and (prefers-reduced-motion: reduce){
  html{
      scroll-behavior: auto; /* Removes scroll animation */
  }

  .skip a{
    -webkit-transition: none; /* sets to default setting */
    transition: none;        /* sets to default setting */
   }

  /*Turn off parallax*/
  header{
    background-attachment: initial;
  }
}



/*Your Code Here*/
/* PLEASE DO NOT REMOVE MY COMMENTS.  THEY HELP US HELP YOU DEBUG. */

/* Step 1: Write selector/rule property to add an underline when
links in the navigation are in the hover or focus state.*/


nav a:hover,
nav a:focus {
  text-decoration: underline;
}



/* Step 2a: Write selector/rule property to position the default position for the skip class element*/

.skip {
  position: relative;
  top: 0;
  left: 0;
}

/* Step 2b: Write selector/rule property to position the skip class element when it is in focus*/
.skip:focus {
  position: absolute;
  top: 10px;
  left: 10px;
}


/* Step 3: Write selector/rule property to style all elements when in focus*/
*:focus {
  outline: 2px solid blue;
}



/* Step 4: Write selector/rule property to style the container */

.container {
  display: grid; /* Use grid layout for the container */
  grid-template-columns: 1fr 5fr 1fr; /* Three columns with specified widths */
  gap: 15px; /* Gap between grid items */
  width: 100%; /* Full width */
  max-width: 960px; /* Maximum width */
  margin: 0 auto; /* Center horizontally */
  padding: 20px; /* Add padding */
}


/* Step 5: Write selector/rule property to add the background image to the 
first div in the grid  and place it in the grid. */


.grid div:first-child {
  background-image: url('header.jpg'); /* Replace 'path_to_your_image.jpg' with the actual image path */
  background-size: cover;
  background-attachment: fixed; /* Add a parallax effect by fixing the background */
  grid-column: 1 / -1; /* Span all columns */
  grid-row: 1; /* Occupy the first row */
  min-height: 500px; /* Minimum height of 500px */
}




/* Steps 6 and 7: Write the selector/rule properties to add place the next elements in the next
 four rows in the grid. */
/* Step 6: Placing elements in the grid */
.about-image {
  grid-row: 2; /* Placed in the 2nd row */
  grid-column: 2 / span 1; /* Begin in the 2nd column and span one column */
}

.method-image {
  grid-row: 4; /* Placed in the 4th row */
  grid-column: 2 / span 1; /* Begin in the 2nd column and span one column */
}

.clients-image {
  grid-row: 5; /* Placed in the 5th row */
  grid-column: 2 / span 1; /* Begin in the 2nd column and span one column */
}

.contact-image {
  grid-row: 5; /* Placed in the 5th row */
  grid-column: 2 / span 1; /* Begin in the 2nd column and span one column */
}

/* Step 7: Styling elements */
.about-image,
.method-image,
.clients-image,
.contact-image {
  grid-column: 1 / -1; /* Cover all columns */
  grid-row: 2, 4, 5; /* Begin on the 2nd, 4th, and 5th rows respectively */
  max-height: 600px; /* Maximum height of 600px */
  overflow: hidden; /* Hide overflow content */
}



      /*This will be a lot of rules.... but be strategic and combine seletors*/


 /* Step 8: Write the selector/rule property to style the .text-block class. */


 .text-block {
  font-size: 16px;
  color: #333;
  line-height: 1.5;
  text-align: center; /* Center the text horizontally */
  display: flex;
  flex-direction: column;
  justify-content: center; /* Center the content vertically */
  align-items: center; /* Center the content horizontally */
  max-height: 250px; /* Maximum height of 250px */
  overflow: auto; /* Allow scrolling for content that exceeds the maximum height */
}

/* Add your media query here */
@media screen and (min-width: 800px){ }

  /* Step 9: Write the selector/rule property to style the nav element */

  nav {
    background-color: #f8f8f8;
    padding: 30px 0; /* 30px padding on the top and bottom, 0 padding on the left and right */
    text-align: center;
    position: absolute;
    top: 0;
    right: 0;
  }


 
  /* Step 10: Write the selector/rule property to update the .container class */
.container {
  display: grid;
  grid-template-columns: 50px auto 500px auto 50px;
}


  /* Steps 11 and 12: Update the grid-column property of the grid's children (where-needed)*/


/* For elements that should begin in the third column and span two columns */
.about,
.clients,
.method-image,
.contact-image {
  grid-column: 3 / span 2; /* Begin in the third column and span two columns */
}

/* For elements that should begin in the second column */
.method,
.contact,
.about-image,
.clients-image {
  grid-column: 2 / span 2; /* Begin in the second column and span two columns */
}
